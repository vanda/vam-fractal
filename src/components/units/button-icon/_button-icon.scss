@use "../../base";
@use "../../mixins";

:root {
  --btn-bg: #{base.sitecolors-siteColor("vam-black")};
  --btn-color: #{base.sitecolors-siteColor("vam-white")};
  --btn-border: #{base.sitecolors-siteColor("vam-white")};
  --btn-bg-hover: #{base.sitecolors-siteColor("vam-grey-1")};
  --btn-size: 34px;
  --btn-icon-size: 48%;
  --btn-icon: none;
  --btn-icon-transform: none;
  --btn-light-bg: #{base.sitecolors-siteColor("vam-white")};
  --btn-light-color: #{base.sitecolors-siteColor("vam-black")};
  --btn-light-border: #{base.sitecolors-siteColor("vam-black")};
  --btn-light-bg-hover: #{base.sitecolors-siteColor("vam-grey-5")};

  // react to any s-light-dark-theme modifying class on a parent element
  .s-light-dark-theme--dark {
    --btn-bg: var(--btn-light-bg);
    --btn-color: var(--btn-light-color);
    --btn-border: var(--btn-light-border);
    --btn-bg-hover: var(--btn-light-bg-hover);

    &:focus-visible {
      @include mixins.focus-inverseFocus;
    }
  }
}

.u-btn-icon {
  align-items: center;
  appearance: none;
  background-color: var(--btn-bg);
  border: 1px solid var(--btn-border);
  border-radius: 50%;
  color: var(--btn-color);
  cursor: pointer;
  display: flex;
  flex: 0 0 auto;
  font-size: 0;
  forced-color-adjust: none;
  height: var(--btn-size);
  justify-content: center;
  width: var(--btn-size);

  &::after {
    background-color: currentColor;
    content: '';
    flex: 0 0 auto;
    height: var(--btn-icon-size);
    mask: var(--btn-icon) no-repeat;
    transform: var(--btn-icon-transform);
    width: var(--btn-icon-size);
  }

  &:hover,
  &:active {
    &:enabled {
      background-color: var(--btn-bg-hover);
    }
  }

  &--active {
    background-color: var(--btn-color);
    color: var(--btn-bg);
    
    &:hover,
    &:active {
      color: var(--btn-color);
    }
  }

  &[disabled] {
    cursor: not-allowed;
    opacity: 0.4;
  }

  // general light theme
  &--light {
    --btn-bg: var(--btn-light-bg);
    --btn-color: var(--btn-light-color);
    --btn-border: var(--btn-light-border);
    --btn-bg-hover: var(--btn-light-bg-hover);

    &:focus-visible {
      @include mixins.focus-inverseFocus;
    }
  }

  // specific preset icon types follow
  &--close {
    --btn-icon: var(--icon-svg-plus);
    --btn-icon-transform: rotate(45deg);
    --btn-icon-size: 52%;
  }
  
  &--info {
    --btn-icon: var(--icon-svg-info);
    --btn-icon-size: 90%;
  }
  
  &--minus {
    --btn-icon: var(--icon-svg-minus);
  }
  
  &--plus {
    --btn-icon: var(--icon-svg-plus);
  }

  &--point-left,
  &--point-right {
    --btn-icon: var(--icon-svg-point-left);
    --btn-icon-size: 42%;
  }

  &--point-right {
    --btn-icon-transform: rotate(180deg);
  }
}
